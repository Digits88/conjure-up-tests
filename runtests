#!/bin/bash

set -eu

TMPDIR=$(mktemp -d)

: ${SPELLDIR:=$TMPDIR/spells}

# Only run core spell tests
: ${CORE_ONLY:=0}

SDKDIR=$SPELLDIR/sdk

git clone --depth 1 -q https://github.com/conjure-up/spells $SPELLDIR || true

. $SDKDIR/common.sh

testLog "Sanitizing cache directory"
rm -rf ~/.cache/conjure-up || true

testLog "Remove Kubernetes specific configs"
rm -rf ~/.kube || true
rm -rf ~/bin/kube* || true

: ${CHANNEL:=edge}

testLog "Checking latest conjure-up from $CHANNEL release"
if ! snap info conjure-up|grep -q "installed"; then
    sudo snap install conjure-up --classic --$CHANNEL > /dev/null 2>&1 || true
else
    sudo snap refresh conjure-up --classic --$CHANNEL > /dev/null 2>&1 || true
fi

export PATH=/snap/bin:$PATH
export JUJU_MODEL=conjure-up-test
export JUJU_CONTROLLER=conjure-up-controller
export CONJURE_UP_SPELLSDIR=$SPELLDIR

# TODO: provide array of clouds to test against
export CLOUD=localhost

core_spells=(kubernetes-core \
                 canonical-kubernetes \
                 openstack-novalxd)

spells=(hadoop-kafka \
            hadoop-processing \
            hadoop-spark \
            realtime-syslog-analytics \
            spark-processing \
            ghost)

do_test() {
    _spell=$1
    testLog "Deploying $TMPDIR/$spell"
    $SPELLDIR/$spell/tests/deploy --spells-dir $SPELLDIR
    if [ -f $SPELLDIR/$spell/tests/verify ]; then
        testLog "Verifying $spell"
        CONJURE_UP_SPELLSDIR=$SPELLDIR $SPELLDIR/$spell/tests/verify
    fi
}

testLog "Running core spell tests"
for spell in ${core_spells[@]}; do
    do_test $spell
done

if [ "$CORE_ONLY" -eq "0" ]; then
    testLog "Running extended spell tests"
    for spell in ${spells[@]}; do
        do_test $spell
    done
fi

juju kill-controller -y $JUJU_CONTROLLER

